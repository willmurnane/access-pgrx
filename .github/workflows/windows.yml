name: Windows

"on":
  push:
    paths:
      - ".github/workflows/windows.yml"
      - "Cargo.toml"
      - "Cargo.lock"
      - "src/**"
      - "access_pgrx.control"

env:
  CARGO_TERM_COLOR: always
  SCCACHE_VERSION: v0.12.0
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  build-windows:
    strategy:
      matrix:
        version: [13, 14, 15, 16, 17, 18]
        # TODO pgrx doesn't support "windows-11-arm" yet, and there's no upstream windows-arm binaries from EDB. If that changes, add the other platform here.
        platform: ["windows-2022"]
      # Continue trying all remaining builds, even if one fails.
      fail-fast: false
    env:
      RUSTC_WRAPPER: sccache
      SCCACHE_DIR: /home/runner/.cache/sccache
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up prerequisites and environment
        run: |
          Write-Output ""

          echo "----- Install sccache -----"
          $arch_id = (Get-WMIObject -Class Win32_Processor).Architecture
          switch ($arch_id) {
            9 { $arch = "x86_64" }
            12 { $arch = "aarch64" }
          }
          Invoke-WebRequest -Uri "https://github.com/mozilla/sccache/releases/download/${env:SCCACHE_VERSION}/sccache-${env:SCCACHE_VERSION}-${arch}-pc-windows-msvc.tar.gz" -OutFile "sccache.tar.gz"
          tar -xzvf sccache.tar.gz
          Move-Item -Force "sccache-*\sccache.exe" -Destination "C:\Windows\System32"
          New-Item -ItemType Directory -Force -Path $env:SCCACHE_DIR | Out-Null
          sccache --version

          rustup update

          Write-Output "----- Outputting env -----"
          Get-ChildItem Env:
          Write-Output ""
      - name: Cache sccache directory
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: C:\Users\runneradmin\sccache
          key: pgrx-sccache-${{matrix.platform}}-${{ hashFiles('**/Cargo.lock', '.github/workflows/windows.yml', '.cargo/config.toml') }}
      - name: Cache cargo directory
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
          key: pgrx-cargo-${{matrix.platform}}-tests-${{ hashFiles('**/Cargo.lock', '.github/workflows/windows.yml', '.cargo/config.toml') }}
      - name: Start sccache server
        run: sccache --start-server
      - name: Print sccache stats
        run: sccache --show-stats
      - name: Install cargo-pgrx
        run: cargo install cargo-pgrx
      - name: Print sccache stats
        run: sccache --show-stats
      - name: Run 'cargo pgrx init'
        run: cargo pgrx init --pg${{ matrix.version }}=download
      - name: Build
        run: |
          $pg_config = Get-ChildItem -Path "${env:USERPROFILE}\.pgrx" -Filter "pg_config.exe" -Recurse
          cargo pgrx package --no-default-features --features pg${{ matrix.version }} --pg-config "${pg_config}"
      - name: Tar
        run: tar -C target/release/access_pgrx-pg${{ matrix.version }} -czvf target/access-pg${{ matrix.version }}-${{ matrix.platform }}.tar.gz .
      - uses: actions/upload-artifact@v4
        with:
          name: access_pgrx-pg${{ matrix.version }}-${{ matrix.platform }}
          path: target/access-pg${{ matrix.version }}-${{ matrix.platform }}.tar.gz
      - name: Print sccache stats
        run: sccache --show-stats
      - name: Stop sccache server
        run: sccache --stop-server || true
